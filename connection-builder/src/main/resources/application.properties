spring.application.name=connection-builder-service
server.port = 8081
# Gives us access to the H2 database web console
spring.h2.console.enabled=true
# Creates the database in a file
#spring.datasource.url=jdbc:h2:file:~/airport_flight_schedules;
spring.datasource.url=jdbc:h2:mem:airport_flight_schedules
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=temesgen
spring.datasource.password=temesgen
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Creates or updates the schema if needed
spring.jpa.hibernate.ddl-auto=update
spring.flyway.enabled=false
# For educational purposes we will show the SQL in console
spring.jpa.show-sql=true

spring.web.cors.allowed-origins=http://localhost:3000

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
amqp.exchange.master.data=master.data.topic
amqp.queue.airport=airport.queue
amqp.queue.schedule=schedule.queue

#amqp.exchange.airport=airport.topic
#amqp.queue.airport=airport.queue
#amqp.exchange.schedule=schedule.topic
#amqp.queue.schedule=schedule.queue

# Shows declaration of exchanges, queues, bindings, etc.
logging.level.org.springframework.amqp.rabbit.core.RabbitAdmin = DEBUG

management.endpoints.web.exposure.include=health,info
